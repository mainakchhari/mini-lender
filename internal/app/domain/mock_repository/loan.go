// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/domain/repository/loan.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/mainakchhari/mini-lender/internal/app/domain"
)

// MockILoan is a mock of ILoan interface.
type MockILoan struct {
	ctrl     *gomock.Controller
	recorder *MockILoanMockRecorder
}

// MockILoanMockRecorder is the mock recorder for MockILoan.
type MockILoanMockRecorder struct {
	mock *MockILoan
}

// NewMockILoan creates a new mock instance.
func NewMockILoan(ctrl *gomock.Controller) *MockILoan {
	mock := &MockILoan{ctrl: ctrl}
	mock.recorder = &MockILoanMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockILoan) EXPECT() *MockILoanMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockILoan) Get(id int) (domain.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(domain.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockILoanMockRecorder) Get(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockILoan)(nil).Get), id)
}

// ListFilter mocks base method.
func (m *MockILoan) ListFilter(query interface{}, args ...interface{}) ([]domain.Loan, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{query}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListFilter", varargs...)
	ret0, _ := ret[0].([]domain.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFilter indicates an expected call of ListFilter.
func (mr *MockILoanMockRecorder) ListFilter(query interface{}, args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{query}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFilter", reflect.TypeOf((*MockILoan)(nil).ListFilter), varargs...)
}

// Save mocks base method.
func (m *MockILoan) Save(loan domain.Loan) (domain.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", loan)
	ret0, _ := ret[0].(domain.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockILoanMockRecorder) Save(loan interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockILoan)(nil).Save), loan)
}
